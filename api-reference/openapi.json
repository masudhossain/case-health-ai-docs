{
  "openapi": "3.1.0",
  "info": {
    "title": "CaseHealth API",
    "description": "API for managing prior authorizations",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.casehealth.ai/api/v1"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/prior-auths": {
      "get": {
        "description": "Returns all prior authorizations from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of results to skip",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prior authorization response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriorAuth"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new prior authorization",
        "requestBody": {
          "description": "Prior authorization to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPriorAuth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Prior authorization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriorAuth"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid data provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PriorAuth": {
        "required": [
          "id",
          "patient_id",
          "service_type",
          "status",
          "created_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the prior authorization",
            "type": "string",
            "format": "uuid"
          },
          "patient_id": {
            "description": "Patient identifier",
            "type": "string"
          },
          "service_type": {
            "description": "Type of service requiring authorization",
            "type": "string"
          },
          "status": {
            "description": "Current status of the prior authorization",
            "type": "string",
            "enum": ["pending", "approved", "denied", "in_review"]
          },
          "description": {
            "description": "Description of the service or procedure",
            "type": "string"
          },
          "requested_date": {
            "description": "Date when the authorization was requested",
            "type": "string",
            "format": "date"
          },
          "approved_date": {
            "description": "Date when the authorization was approved",
            "type": "string",
            "format": "date"
          },
          "denied_date": {
            "description": "Date when the authorization was denied",
            "type": "string",
            "format": "date"
          },
          "created_at": {
            "description": "Timestamp when the record was created",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "Timestamp when the record was last updated",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewPriorAuth": {
        "required": [
          "patient_id",
          "service_type"
        ],
        "type": "object",
        "properties": {
          "patient_id": {
            "description": "Patient identifier",
            "type": "string"
          },
          "service_type": {
            "description": "Type of service requiring authorization",
            "type": "string"
          },
          "description": {
            "description": "Description of the service or procedure",
            "type": "string"
          },
          "requested_date": {
            "description": "Date when the authorization was requested",
            "type": "string",
            "format": "date"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  }
}